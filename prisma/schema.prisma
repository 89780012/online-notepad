generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  username            String               @unique
  password            String
  avatar              String?
  name                String?
  bio                 String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  notes               Note[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model Note {
  id          String   @id @default(cuid())
  title       String
  content     String
  language    String   @default("en")
  isPublic    Boolean  @default(false)
  shareToken  String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  customSlug  String?  @unique
  contentHash String   @default("")
  localId     String?
  noteMode    String   @default("markdown")
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([shareToken])
  @@index([customSlug])
  @@index([localId])
  @@map("notes")
}

model BlogPost {
  id          String    @id @default(cuid())
  title       String
  description String
  keywords    String
  slug        String    @unique
  content     String
  status      String    @default("draft")
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("blog_posts")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  used      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}
